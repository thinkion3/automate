name: Android Appium Instagram Bot

on:
  workflow_dispatch:

jobs:
  run-android-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Java 11
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install system dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils
          sudo apt-get install -y python3-pip unzip curl wget openjdk-11-jdk
          sudo apt-get install -y libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 libbz2-1.0:i386

      - name: Setup Android SDK
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk/cmdline-tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O cmdtools.zip
          unzip -q cmdtools.zip
          mv cmdline-tools latest
          
          # Set environment variables
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/emulator" >> $GITHUB_PATH
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH

      - name: Install Android SDK components
        run: |
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          export ANDROID_HOME=$HOME/android-sdk
          
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --update
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" \
            "platforms;android-30" \
            "emulator" \
            "system-images;android-30;google_apis;x86_64" \
            "build-tools;30.0.3"

      - name: Create AVD
        run: |
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          export ANDROID_HOME=$HOME/android-sdk
          
          echo "no" | $HOME/android-sdk/cmdline-tools/latest/bin/avdmanager create avd \
            -n test_avd \
            -k "system-images;android-30;google_apis;x86_64" \
            --force \
            -c 2048M

      - name: Start Android Emulator
        run: |
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          export ANDROID_HOME=$HOME/android-sdk
          
          # Enable KVM acceleration
          sudo adduser $USER kvm
          sudo chmod 666 /dev/kvm
          
          # Start emulator in background
          nohup $HOME/android-sdk/emulator/emulator @test_avd \
            -no-window \
            -no-audio \
            -gpu swiftshader_indirect \
            -no-boot-anim \
            -memory 2048 \
            -partition-size 4096 \
            -wipe-data \
            > emulator.log 2>&1 &
          
          # Wait for device to be ready
          timeout 300 $HOME/android-sdk/platform-tools/adb wait-for-device
          
          # Wait for boot to complete
          timeout 300 bash -c 'until [ "$($HOME/android-sdk/platform-tools/adb shell getprop sys.boot_completed | tr -d "\r")" = "1" ]; do sleep 5; done'
          
          # Unlock the screen
          $HOME/android-sdk/platform-tools/adb shell input keyevent 82
          $HOME/android-sdk/platform-tools/adb shell input keyevent 26
          sleep 10
          
          echo "âœ… Emulator is ready"
          $HOME/android-sdk/platform-tools/adb devices

      - name: Install Instagram APK
        run: |
          # Download Instagram APK
          wget -q "https://github.com/Alex313031/ig-apk/releases/download/latest/Instagram_v320.0.0.12.116.apk" -O instagram.apk
          
          # Install APK
          $HOME/android-sdk/platform-tools/adb install -r instagram.apk
          
          # Verify installation
          $HOME/android-sdk/platform-tools/adb shell pm list packages | grep instagram
          echo "âœ… Instagram APK installed"

      - name: Install Appium and dependencies
        run: |
          # Install Python dependencies
          pip3 install --upgrade pip
          pip3 install Appium-Python-Client selenium
          
          # Install Appium
          npm install -g appium@2.0.0
          npm install -g @appium/doctor
          
          # Verify Appium installation
          appium --version
          
          # Install UiAutomator2 driver
          appium driver install uiautomator2
          
          echo "âœ… Appium installed successfully"

      - name: Start Appium Server
        run: |
          # Start Appium server in background
          nohup appium server --port 4723 --allow-insecure chromedriver_autodownload > appium.log 2>&1 &
          
          # Wait for Appium server to start
          timeout 60 bash -c 'until curl -s http://localhost:4723/status > /dev/null; do echo "Waiting for Appium server..."; sleep 5; done'
          
          echo "âœ… Appium server is running"
          curl -s http://localhost:4723/status | head -20

      - name: Run Instagram Bot
        env:
          IG_USERNAME: ${{ secrets.IG_USERNAME }}
          IG_PASSWORD: ${{ secrets.IG_PASSWORD }}
        run: |
          echo "ðŸ¤– Starting Instagram bot..."
          python3 appium_bot.py

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: |
            emulator.log
            appium.log
